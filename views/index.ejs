<script>
var listeningRadius=<%=listeningRadius%>;
//from the MDC
function ISODateString(d) {
  function pad(n){
    return n<10 ? '0'+n : n
  }
  return d.getUTCFullYear()+'-'
    + pad(d.getUTCMonth()+1)+'-'
    + pad(d.getUTCDate())+'T'
    + pad(d.getUTCHours())+':'
    + pad(d.getUTCMinutes())+':'
    + pad(d.getUTCSeconds())+'Z'
}

// hack! base-64 to int32 (just for identicon purposes, not actually a base-64 decoder)
function sessionIDtoInt(str) {
  try {
    return (str.charAt(0).charCodeAt() + (str.charAt(1).charCodeAt() << 6) + (str.charAt(2).charCodeAt() << 12) +(str.charAt(3).charCodeAt() << 18) + (str.charAt(4).charCodeAt() << 24));
  } catch (err) {
    return 0;
  }
}

var currentGeohash='';

// scroll to bottom of chat window
function updateMessageScroll(){
  $("#scrollbox").attr({ scrollTop: $("#scrollbox").attr("scrollHeight") });
}

// Make a new message visible
function message(obj){
  var ml = $("#messageListing");
  var row = $("<tr class='msgRow' />").attr("id","msg-"+obj.id);
  var tdIdent = $("<td class='identCell' />").attr("data-sessionid",obj.sessionid);
  row.append(tdIdent);
  row.append($("<td class='userCell' />").text(obj.user));
  var tdGeohash =  $("<td class='ghCell' />");
  var geolink = $("<a />");
  geolink.attr("href","http://geohash.org/"+obj.geohash);
  geolink.append($("<img alt='Location' src='/images/globe_yellow_30x30.png' />"));
  tdGeohash.append(geolink);
  row.append(tdGeohash);
  var tdDate =  $("<td class='dateCell' />");
  var timeAbbr = $("<abbr class='timeago' />").attr("title",ISODateString(new Date(obj.timestamp)));
  timeAbbr.text(new Date(obj.timestamp));
  timeAbbr.timeago();
  row.append(tdDate);
  row.append($("<td class='msgCell' />").text(obj.message));
  // Create identicon
  var identiconSize = 30;
  var c = document.createElement('canvas');
  c.setAttribute("width",identiconSize);
  c.setAttribute("height",identiconSize);
  tdIdent.append(c);
  new Identicon(c, sessionIDtoInt(obj.sessionid), identiconSize);
  // Add row to chat window
  ml.append(row);
  // scroll to bottom
  updateMessageScroll();
}

var socket = new io.Socket(null, {port: 8134, rememberTransport: false});
socket.on('connect',function() {
    $("#socketConnectionStatus").text("Status: Connected");
});
socket.on('disconnect',function() {
    $("#socketConnectionStatus").text("Status: Disconnected, trying to reconnect...");
    socket.connect();
});
$("#socketConnectionStatus").text("Status: Connecting...");
socket.connect();

socket.on('message', function(obj){
    message(JSON.parse(obj));
});
function unsubscribeFromAll() {
  socket.send(JSON.stringify({action: "unsubscribe-all"}));
}
function subscribeToGeoHash(geohash) {
  socket.send(JSON.stringify({action: "subscribe", geohash: geohash}));
}

$(document).ready(function() {
  $('abbr.timeago').timeago();
  $("#currentLocation").text("Trying to determine location...");
  updateRadiusListView(listeningRadius);
  // Request a position, no more than 10 minutes old
  navigator.geolocation.getCurrentPosition(successCallback,
                                           errorCallback,
                                           {maximumAge:600000});

  function successCallback(position) {
    //$("#currentLocation").text("found location: ("+position.coords.latitude+","+position.coords.longitude+")");
    $("#currentLocation").text("");
    // Convert to GeoHash
    currentGeohash = encodeGeoHash(position.coords.latitude,position.coords.longitude);
    $("#geohash").val(currentGeohash);
    $("#messageSubmit").removeAttr('disabled');
    //    subscribeToGeoHash(currentGeohash.substring(0,listeningRadius));
    retrieveMessageHistory(currentGeohash,function() {
        // after old messages are displayed:
        // Subscribe to this area for new messages
        setListeningRadius(listeningRadius);
      });
  }

  function errorCallback(error) {
    // Update a div element with error.message.
    $("#currentLocation").text("Error determining position: "+error.message);
  }

  $("#messageForm").submit(function(event) {
    event.preventDefault();
    var form = $(this);
    var url = form.attr('action');
    $.post(url, {username: $('#username').val(),
           message: $('#message').val(),
           geohash: $('#geohash').val()});
  });

  function messageSorter(a,b) {
    return (a.timestamp - b.timestamp)
  }

  // Retrieve all historical messages around the current listening radius.
  // sorts messages, and then adds them to the page with message();
  function retrieveMessageHistory(geohash,callback) {
    var msgHistory = [];
    // get list of messages for this box
    var all_adj = findAllAdjGeohashes(currentGeohash.substring(0,listeningRadius));
    var retrieved = 0;
    for(var i = 0; i < all_adj.length ; i++) {
      (function(gh) {
        $.get("/messages/"+gh, function(data) {
            retrieved++;
            var messages = JSON.parse(data);
            for (var j = 0; j < messages.length; j++) {
              msgHistory.push(messages[j]);
            }
            if (retrieved == all_adj.length) {
              msgHistory.sort(messageSorter);
              for(var i = 0; i < msgHistory.length; i++) {
                message(msgHistory[i]);
              }
              callback();
            }
          });
      })(all_adj[i]);
    }
  }
});

function setListeningRadius(size) {
  var prevListeningRadius=listeningRadius;
  listeningRadius=size;
  //unsubscribe to geohash channels
  unsubscribeFromAll();
  // find adjacent geohashes
  var all_adj = findAllAdjGeohashes(currentGeohash.substring(0,listeningRadius));
  // subscribe to current and surrounding hashes
  for (var i = 0; i < all_adj.length; i++) {
    subscribeToGeoHash(all_adj[i]);
  }
  //set radius as the client default
  if (prevListeningRadius!=listeningRadius) {
    $.post("/user/defaultradius/"+size);
  }
}

function findAllAdjGeohashes(geohash) {
  var all_adj = [];
  all_adj.push(geohash);
  all_adj.push(calculateAdjacent(geohash,'top'));
  all_adj.push(calculateAdjacent(geohash,'bottom'));
  all_adj.push(calculateAdjacent(geohash,'right'));
  all_adj.push(calculateAdjacent(geohash,'left'));
  all_adj.push(calculateAdjacent(calculateAdjacent(geohash,'left'), 'top'));
  all_adj.push(calculateAdjacent(calculateAdjacent(geohash,'right'), 'top'));
  all_adj.push(calculateAdjacent(calculateAdjacent(geohash,'left'), 'bottom'));
  all_adj.push(calculateAdjacent(calculateAdjacent(geohash,'right'), 'bottom'));
  return all_adj;
}

function updateRadiusListView(size) {
  $("#radiusList li").removeClass("activeRadius");
  $("#radius-select-"+size).addClass("activeRadius");
}
</script>

<div id="header-container" class="container">
  <div class="span-8">
    <h1 id="header">Kumquat</h1>
  </div>
  <div class="span-16 last">
    <div class="prepend-1 span-3">
      <h2 id="subheader">Listening Radius: </h1>
    </div>
    <div class="span-12 last">
      <ul id="radiusList">
        <li id="radius-select-7" class="activeRadius"><a href="#" onClick="setListeningRadius(7);updateRadiusListView('7')">Kumquat</a></li>
        <li id="radius-select-6"><a href="#" onClick="setListeningRadius(6);updateRadiusListView('6')">Tangerine</a></li>
        <li id="radius-select-5"><a href="#" onClick="setListeningRadius(5);updateRadiusListView('5')">Orange</a></li>
        <li id="radius-select-3"><a href="#" onClick="setListeningRadius(3);updateRadiusListView('3')">Grapefruit</a></li>
      </ul>
    </div>
  </div>
</div>
<div class="container">

<div class="span-24 last" id="currentLocation"></div>
<div class="span-24 last" id="socketConnectionStatus">Status: Disconnected</div>

<br />

</div>
<div class="container">
  <div class="span-18 append-6 last">
    <table id="messageListingHeaders">
      <tr><th>Identicon</th><th>User</th><th>Location</th><th>Timestamp</th><th>Message</th></tr>
    </table>
  </div>
  <div id="scrollbox" class="span-18 append-6 last">
    <table id="messageListing">
    </table>
  </div>
</div>

<div class="container">
<form id="messageForm" action="/messages" method="post">
<div class="span-4" id="nickNameSelection">
  <label class="span-2" for="username">Nickname: </label>
  <input class="span-2" id="username" type="text" name="username" value="<%=username%>" />
</div>
  <input id="geohash" type="hidden" name="geohash" />
<div class="span-20 last" id="messageSelection">
  <label class="prepend-1 span-2" for="message">Message: </label>
  <input class="span-11" id="message" type="text" size="80" name="message" />
  <div class="prepend-1 span-5 last">
    <input id="messageSubmit" disabled type="submit" />
  </div>
</div>
</form>
</div>


<div class="container" id="footer">
  <div class="prepend-8 span-8 append-8 last">
  <p>Copyright Â© 2011 <a href="mailto:scsibug@imap.cc">Greg Heartsfield</a></p>
  </div>
</div>
